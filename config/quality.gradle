apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

dependencies {
    checkstyle 'com.puppycrawl.tools:checkstyle:8.7'
}

def configDir = "${project.rootDir}/config/quality"
def reportsDir = "${project.buildDir}/reports"

check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'


task checkstyle(type: Checkstyle) {
    description 'Check code standard'
    group 'verification'

    configFile file("$configDir/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("$configDir/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    classpath = files()
}


task pmd(type: Pmd) {
    group 'verification'

    ignoreFailures = false
    ruleSetFiles = files("$configDir/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}


task findbugs(type: FindBugs,
        group: 'Verification',
        description: 'Inspect java bytecode for bugs',
        dependsOn: ['compileDebugSources','compileReleaseSources']) {

    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$configDir/findbugs/android-exclude-filter.xml")
    classes = files("$project.rootDir/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = false
        xml {
            destination "$reportsDir/findbugs/findbugs.xml"
        }
        html {
            destination "$reportsDir/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

android {
    lintOptions {
        abortOnError true
        xmlReport false
        lintConfig file("$configDir/lint/lint.xml")
    }
}
